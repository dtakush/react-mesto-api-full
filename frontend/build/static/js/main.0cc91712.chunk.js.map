{"version":3,"sources":["contexts/CurrentUserContext.js","images/logo.svg","components/Header.js","images/editAvatar.svg","components/Card.js","components/Main.js","components/Footer.js","components/Entrance.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","utils/api.js","utils/auth.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/EditAvatarPopup.js","components/DeletePopup.js","components/ImagePopup.js","components/InfoTooltip.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurrentUserContext","React","createContext","Header","props","location","useLocation","isLocationSignUp","pathname","isLocationSignIn","isLocationStart","className","src","logo","alt","loggedIn","userData","email","to","onClick","signOut","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","style","backgroundImage","link","name","length","Main","useState","setName","setAbout","useEffect","about","avatar","onEditAvatar","editAvatar","type","onEditProfile","onAddPlace","cards","map","item","Footer","Entrance","title","id","onSubmit","children","buttonTitle","Login","setEmail","password","setPassword","e","preventDefault","onLogin","placeholder","minLength","maxLength","onChange","target","value","required","Register","onRegister","ProtectedRoute","Component","component","api","baseUrl","headers","this","fetch","method","then","_checkResponse","body","JSON","stringify","items","res","ok","json","Promise","reject","status","localStorage","getItem","BASE_URL","PopupWithForm","isOpen","onClose","EditProfilePopup","onUpdateUser","AddPlacePopup","setLink","onAddCard","EditAvatarPopup","userAvatarRef","useRef","onUpdateAvatar","current","reset","ref","DeletePopup","ImagePopup","InfoTooltip","App","history","useHistory","setCurrentUser","setLoggedIn","setUserData","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isTooltipPopupOpen","setIsTooltipPopupOpen","isSuccessTooltipPopupOpen","setIsSuccessTooltipPopupOpen","setCard","isImagePopupOpen","setIsImagePopupOpen","setCards","tokenCheck","token","jwt","console","log","data","catch","err","push","removeItem","handleIsTooltipPopupOpen","closeAllPopups","getUserInfo","userInfo","getInitialCards","Provider","exact","path","changeLikeCardStatus","likedCard","newCards","deleteCard","filter","c","setItem","updateHeaders","auth","setUserInfo","addCard","newCard","setNewAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cc91712.chunk.js","sourcesContent":["import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport logo from '../images/logo.svg';\n\nfunction Header(props) {\n    const location = useLocation();\n    const isLocationSignUp = location.pathname === '/signup';\n    const isLocationSignIn = location.pathname === '/signin';\n    const isLocationStart = location.pathname === '/';\n\n\n    function handleSignOut() {\n        props.signOut();\n    }\n\n\n    return (\n        <header className=\"header\">\n            <img src={logo} className=\"header__logo\" alt=\"Логотип Mesto\" />\n\n            {(isLocationStart) && \n                <div className=\"header__user-info\">\n                    <p className=\"header__email\">{props.loggedIn ? props.userData.email : \"\"}</p>\n                    <Link to=\"/signin\"\n                    className=\"header__link header__sign-out\"\n                    onClick={handleSignOut}>\n                    Выйти\n                    </Link> \n            </div>\n            }\n\n            {(isLocationSignIn) && \n                <div className=\"header__user-info\">\n                    <Link to=\"/signup\"\n                    className=\"header__link\">\n                    Регистрация\n                    </Link> \n            </div>\n            }\n\n            {(isLocationSignUp) && \n                <div className=\"header__user-info\">\n                    <Link to=\"/signin\"\n                    className=\"header__link\">\n                    Войти\n                    </Link> \n            </div>\n            }\n\n\n        </header>\n    )\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/editAvatar.a086f758.svg\";","import React from 'react';\n//Контекст\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n\nfunction Card ({card, onCardClick, onCardLike, onCardDelete}) {\n    //Подписываемся на контект\n    const currentUser = React.useContext(CurrentUserContext);\n\n    //Показ иконки удаления\n    const isOwn = card.owner._id === currentUser._id;\n    const cardDeleteButtonClassName = (\n        `card__delete ${isOwn ? 'card__delete_show' : ''}`\n    );\n\n    //Изменение лайка карточки\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    const cardLikeButtonClassName = (\n        `card__like-image ${isLiked ? 'card__like-image_active' : ''}`\n    ); \n\n    //Клик по карточке\n    function handleClick() {\n        onCardClick(card);\n      }\n\n    //Обработчик лайка\n    function handleLikeClick() {\n        onCardLike(card);\n    }\n\n    //Удаление карточки\n    function handleDeleteClick() {\n        onCardDelete(card);\n    }\n\n    return (\n        <div className=\"card\">\n            <button className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n            <button className=\"card__image-button\" onClick={handleClick}>\n                <div className=\"card__image\" style={{ backgroundImage: `url(${card.link})` }}></div>\n            </button>\n            <div className=\"card__info-block\">\n                <h2 className=\"card__title\">{card.name}</h2>\n                <div className=\"card__like\">\n                    <div className={cardLikeButtonClassName} onClick={handleLikeClick}></div>\n                    <p className=\"card__like-number\">{card.likes.length}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\n//Контекст\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n//Элементы\nimport editAvatar from '../images/editAvatar.svg';\nimport Card from './Card';\n\n\nfunction Main(props) {\n\n    //Подписываемся на контект\n    const currentUser = React.useContext(CurrentUserContext);\n\n    //Стейт-переменные\n    const [name, setName] = React.useState('');\n    const [about, setAbout] = React.useState('');\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setAbout(currentUser.about);\n      }, []);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__person\">\n                    <div className=\"profile__avatar\" style={{ backgroundImage: `url(${currentUser.avatar})` }} onClick={props.onEditAvatar}>\n                        <div className=\"profile__avatar-edit\">\n                            <img src={editAvatar} className=\"profile__edit-icon\" alt=\"Иконка редактирования аватара\" />\n                        </div>\n                    </div>\n                    <div className=\"profile__info\">\n                        <div className=\"profile__edit-info\">\n                            <h1 className=\"profile__name\" name=\"name\">{currentUser.name}</h1>\n                            <button className=\"profile__edit-button\" type=\"button\" onClick={props.onEditProfile}></button>\n                        </div>\n                        <p className=\"profile__about\" name=\"about\">{currentUser.about}</p>\n                    </div>\n                </div>\n                <button className=\"profile__add-button\" type=\"button\" onClick={props.onAddPlace}></button>\n            </section>\n\n    \n            <section className=\"cards\">\n                {props.cards.map((item) => {\n                   \n                    return (\n                        <Card\n                        card={item}\n                        key={item._id}\n                        onCardClick={props.onCardClick}\n                        onCardLike={props.onCardLike}\n                        onCardDelete={props.onCardDelete} />\n                    )\n                })}\n            </section>\n\n        </main>\n    )\n}\n\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&#169; 2021 Mesto Russia</p>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\n\nfunction Entrance(props) {\n    return (\n        <section className=\"entrance\" name={props.name}>\n            <h2 className=\"entrance__title\">{props.title}</h2>\n            <form\n            className=\"entrance__form\"\n            id={`${props.name}-form`}\n            onSubmit={props.onSubmit}>\n\n                {props.children}\n\n                <button\n                className=\"entrance__submit\"\n                name=\"entrance__submit\"\n                type=\"submit\"\n                id=\"entrance__submit\">{props.buttonTitle}</button>\n            </form>\n        </section>\n    )\n}\n\nexport default Entrance;","import React from 'react';\nimport Entrance from './Entrance';\n\n\nfunction Login(props) {\n\n    const [email, setEmail] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n\n\n    function handleChangeEmail(e) {\n        setEmail(e.target.value);\n\n      }\n    \n      function handleChangePassword(e) {\n        setPassword(e.target.value);\n\n      }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onLogin({ email, password });\n    }\n\n    return (\n        <Entrance\n            name=\"login\"\n            title=\"Вход\"\n            buttonTitle=\"Войти\"\n            onSubmit={handleSubmit}>\n\n            <input\n            className=\"entrance__input entrance__input_email\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            id=\"login__input_email\"\n            minLength=\"2\"\n            maxLength=\"40\"\n            onChange={handleChangeEmail}\n            required />\n\n            <span   \n            className={`popup__error popup__error_email`}\n            id=\"login__input_email-error\"\n            ></span>    \n\n            <input\n            className=\"entrance__input entrance__input_password\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Пароль\"\n            id=\"login__input_password\"\n            minLength=\"2\"\n            maxLength=\"40\"\n            onChange={handleChangePassword}\n            required />\n\n            <span   \n            className={`popup__error popup__error_password`}\n            id=\"login__input_password-error\"\n            ></span> \n        </Entrance>\n\n    )\n}\n\nexport default Login;\n\n/*const [emailValid, setEmailValid] = React.useState(false);\n    const [passwordValid, setPasswordValid] = React.useState(false);\n\n    const [loginEmailError, setLoginEmailError] = React.useState(\"\");\n    const [loginPasswordError, setLoginPasswordError] = React.useState(\"\");\n    \n    function validate() {\n        setLoginEmailError(email.validationMessage);\n        setLoginPasswordError(password.validationMessage);\n\n        if(!email.validity.valid) {\n            setEmailValid(false);\n        } else {\n            setEmailValid(true);\n        }\n\n        if(!password.validity.valid) {\n            setPasswordValid(false);\n        } else {\n            setPasswordValid(true);\n        }\n    }*/","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Entrance from './Entrance';\n\nfunction Register(props) {\n    const [email, setEmail] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n\n    function handleChangeEmail(e) {\n        setEmail(e.target.value);\n      }\n    \n      function handleChangePassword(e) {\n        setPassword(e.target.value);\n      }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onRegister({ email, password });\n    }\n\n\n    return (\n        <div className=\"register\">\n        <Entrance\n            name=\"register\"\n            title=\"Регистрация\"\n            buttonTitle=\"Зарегистрироваться\"\n            onSubmit={handleSubmit}>\n                <input\n                className=\"entrance__input entrance__input_email\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                id=\"register__input_email\"\n                minLength=\"2\"\n                maxLength=\"40\"\n                onChange={handleChangeEmail}\n                required />\n\n                <input\n                className=\"entrance__input entrance__input_password\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Пароль\"\n                id=\"register__input_password\"\n                minLength=\"2\"\n                maxLength=\"40\"\n                onChange={handleChangePassword}\n                required />\n        </Entrance>\n        <Link to=\"/signin\" className=\"register__link\">Уже зарегистрированы? Войти</Link>\n        </div>\n\n    )\n}\n\nexport default Register;\n\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <Route>\n      {() =>\n        props.loggedIn ? <Component {...props} /> : <Redirect to=\"./signin\" />\n      }\n    </Route>\n  );\n};\n\nexport default ProtectedRoute; ","\nclass Api {\n    constructor({baseUrl, headers}) {\n      this.baseUrl = baseUrl;\n      this.headers = headers\n    }\n\n    //Запрос карточек с сервера\n    getInitialCards() {\n      return fetch(`${this.baseUrl}/cards`, {\n        method: 'GET',\n        headers: this.headers\n      })\n      .then(this._checkResponse)\n    }\n\n    //Добавление карточки на сервер\n    addCard(card) {\n      return fetch(`${this.baseUrl}/cards`, {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify({\n          link: card.link,\n          name: card.name,\n        }),\n      })\n      .then(this._checkResponse)\n    }\n\n    //Удаление карточки\n    deleteCard(id) {\n      return fetch(`${this.baseUrl}/cards/${id}`, {\n        method: 'DELETE',\n        headers: this.headers\n      })\n      .then(this._checkResponse)\n    }\n\n    //Добавление и удаление лайка\n    changeLikeCardStatus(id, isLiked) {\n      return fetch(`${this.baseUrl}/cards/${id}/likes`, {\n        method: isLiked ? 'PUT' : 'DELETE',\n        headers: this.headers\n\n      })\n      .then(this._checkResponse)\n    }\n  \n  \n    //Запрос информации о пользователе    \n     getUserInfo() {\n      return fetch(`${this.baseUrl}/users/me`, {\n        method: 'GET',\n        headers: this.headers\n      })\n      .then(this._checkResponse)\n    }\n\n    //Изменение информации о пользователе\n    setUserInfo(items) {\n      return fetch(`${this.baseUrl}/users/me`, {\n        method: 'PATCH',\n        headers: this.headers,\n        body: JSON.stringify({\n          name: items.name,\n          about: items.about\n        })\n      })\n      .then(this._checkResponse)\n    }\n\n    //Изменение аватара\n    setNewAvatar(avatar) {\n      return fetch(`${this.baseUrl}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this.headers,\n        body: JSON.stringify({\n          avatar: avatar.avatar,\n        })\n      })\n      .then(this._checkResponse)\n    }\n\n    _checkResponse(res){\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    updateHeaders() {\n      this.headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n      }\n    }\n  }\n\n\nconst api = new Api({\n      baseUrl: 'https://api.dtakush.mesto.student.nomoredomains.club',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json'\n      }\n  });\n\n\nexport default api;","import api from './api';\nexport const BASE_URL = 'https://api.dtakush.mesto.student.nomoredomains.club';\n\n//Регистрация\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password})\n  })\n  .then((res) => {\n    try {\n      if (res.status !== 400){\n        return res.json();\n      }\n    } catch(e){\n      return (e)\n    }\n  })\n  .then((res) => {\n    return res;\n  })\n  .catch((err) => console.log(err));\n};\n\n\n//Авторизация\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({email, password})\n  })\n    .then((res) => {\n      if(res.status === 200) {\n          return res.json();\n        }\n        if(res.status === 400) {\n          console.log(\"Не передано одно из полей\");\n        }\n        if(res.status === 401) {\n          console.log(\"Пользователь с email не найден\");\n        }\n    })\n    .then((res) => {\n        if(res.token) {\n          localStorage.setItem('jwt', res.token);\n          api.updateHeaders();\n          return res;\n        }\n    })  \n    .catch((err) => console.log(err));\n};\n\n\n//Проверка токена\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    }\n  })\n  .then((res) => {\n    if(res.status === 200) {\n      return res.json();\n    }\n    if(res.status === 400) {\n      console.log(\"Токен не передан или передан не в том формате\");\n    }\n    if(res.status === 401) {\n      console.log(\"Переданный токен некорректен\");\n    }\n  })\n  .then((data) => {\n    return data;\n  })\n  .catch((err) => console.log(err));\n}","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return (\n    <section className={`popup popup_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\n        <div className=\"popup__container\">\n            <button className={`popup__close popup__close-${props.name}`} type=\"button\" onClick={props.onClose}></button>\n            <h2 className=\"popup__title\">{props.title}</h2>\n\n            <form\n            className={`popup__form popup__form_${props.name}`}\n            name={`${props.name}-form`}\n            id={`${props.name}-form`}\n            onSubmit={props.onSubmit}\n            >\n\n                {props.children}\n\n                <button\n                className=\"popup__save-button\"\n                name={`${props.name}-popup-button`}\n                id={`${props.name}-popup-button`}\n                type=\"submit\">\n                    {props.buttonTitle}\n                </button>\n\n            </form>\n        </div>\n    </section>\n    )\n}\n\nexport default PopupWithForm;","import React from 'react';\n//Контекст\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditProfilePopup(props) {\n    //Подписываемся на контект\n    const currentUser = React.useContext(CurrentUserContext);\n\n    //Стейт-переменные\n    const [name, setName] = React.useState('');\n    const [about, setAbout] = React.useState('');\n\n\n    //Обработчики\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n\n    function handleChangeAbout(e) {\n        setAbout(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        // Передаём значения управляемых компонентов во внешний обработчик\n        props.onUpdateUser({\n          name: name,\n          about: about,\n        });\n    }\n\n    React.useEffect(() => {\n      setName(currentUser.name);\n      setAbout(currentUser.about);\n    }, [currentUser, props.isOpen]);\n\n\n    return (\n        <PopupWithForm\n        name=\"profile\"\n        title=\"Редактировать профиль\"\n        buttonTitle=\"Сохранить\"\n        isOpen={props.isOpen}\n        onClose={props.onClose}\n        onSubmit={handleSubmit}>\n            <input\n            value={name || ''}\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Ваше имя\"\n            className=\"popup__input popup__input_name\"\n            id=\"popup__input_name\"\n            minLength=\"2\"\n            maxLength=\"40\"\n            onChange={handleChangeName}\n            required\n            />\n            <span\n            className=\"popup__error popup__error_name\"\n            id=\"popup__input_name-error\"\n            ></span>\n\n            <input\n            value={about || ''}\n            name=\"about\"\n            type=\"text\"\n            placeholder=\"О себе\"\n            className=\"popup__input popup__input_about\"\n            id=\"popup__input_about\"\n            minLength=\"2\"\n            maxLength=\"200\"\n            onChange={handleChangeAbout}\n            required\n            />\n            <span\n            className=\"popup__error popup__error_about\"\n            id=\"popup__input_about-error\"\n            ></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n\n    //Стейт-переменные\n    const [name, setName] = React.useState('');\n    const [link, setLink] = React.useState('');\n\n\n    //Обработчики\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n\n    function handleChangeLink(e) {\n        setLink(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onAddCard({name, link});\n    }\n\n    React.useEffect(() => {\n        setName(' ');\n        setLink(' ');\n    }, [props.isOpen]);\n\n\n    return (\n        <PopupWithForm\n        name=\"place\"\n        title=\"Новое место\"\n        buttonTitle=\"Сохранить\"\n        isOpen={props.isOpen}\n        onClose={props.onClose}\n        onSubmit={handleSubmit}>\n            <input\n            name=\"place\"\n            type=\"text\"\n            placeholder={`Название`}\n            value={name || ''}\n            className=\"popup__input popup__input_place\"\n            id=\"popup__input_place\"\n            minLength=\"2\"\n            maxLength=\"30\"\n            onChange={handleChangeName}\n            required />\n            <span\n            className=\"popup__error popup__error_name\"\n            id=\"popup__input_place-error\"\n            ></span>\n\n\n            <input\n            name=\"link\"\n            type=\"url\"\n            placeholder=\"Ссылка\"\n            value={link || ''}\n            className=\"popup__input popup__input_link\"\n            id=\"popup__input_link\"\n            onChange={handleChangeLink}\n            required />\n            <span\n            className=\"popup__error popup__error_link\"\n            id=\"popup__input_link-error\"\n            ></span>\n        </PopupWithForm>\n    )\n}\n\nexport default AddPlacePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n    //Реф\n    const userAvatarRef = React.useRef();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n      \n        props.onUpdateAvatar({\n          avatar: userAvatarRef.current.value,\n        });\n\n        e.target.reset();\n    } \n\n\n    return (\n        <PopupWithForm\n        name=\"avatar\"\n        title=\"Обновить аватар\"\n        buttonTitle=\"Сохранить\"\n        isOpen={props.isOpen}\n        onClose={props.onClose}\n        onSubmit={handleSubmit}>\n            <input\n            ref={userAvatarRef}\n            name=\"link\" type=\"url\"\n            placeholder=\"Ссылка\"\n            className=\"popup__input popup__input_link\"\n            id=\"avatar-popup__input_link\"\n            required />\n            <span className=\"popup__error popup__error_link\" id=\"avatar-popup__input_link-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction DeletePopup() {\n    return (\n        <PopupWithForm\n        name=\"delete\"\n        title=\"Вы уверены?\"\n        buttonTitle=\"Да\">\n        </PopupWithForm>\n    )\n}\n\nexport default DeletePopup;","import React from 'react';\n\nfunction ImagePopup({card, isOpen, onClose}) {\n    return (\n        <section className={`popup popup_card ${isOpen ? 'popup_opened' : ''}`} name={card.name}>\n            <div className=\"popup__container popup__container_card\">\n                <div className=\"popup__pic\">\n                    <button className=\"popup__close popup__close_card\" type=\"button\" onClick={onClose}></button>\n                    <img className=\"popup__image\" src={card.link} alt={card.name} />\n                    <p className=\"popup__text\">{card.name}</p>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default ImagePopup;","import React from 'react';\n\nfunction InfoTooltip(props) {\n    return (\n        <section className={`popup popup__auth-info popup__auth-info_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\n            <div className=\"popup__container popup__container_auth-info\">\n                <button className={`popup__close popup__close-${props.name}`} type=\"button\" onClick={props.onClose}></button>\n                <div className={`popup__icon popup__icon_${props.name}`}></div>\n                <h2 className=\"popup__title popup__title_auth-info\">{props.title}</h2>\n            </div>\n        </section>\n    )\n}\n\nexport default InfoTooltip;","import React from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\n//Контекст\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n//Основное\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport api from '../utils/api.js';\nimport * as auth from \"../utils/auth.js\";\n\n//Попапы\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport DeletePopup from './DeletePopup';\nimport ImagePopup from './ImagePopup';\nimport InfoTooltip from './InfoTooltip';\n\nimport '../index.css';\n\nfunction App() {\n\n    const history = useHistory();\n\n    //Переменные состояния\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [loggedIn, setLoggedIn] = React.useState(false);\n\n    const [userData, setUserData] = React.useState({});\n\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isTooltipPopupOpen, setIsTooltipPopupOpen] = React.useState(false);\n    const [isSuccessTooltipPopupOpen, setIsSuccessTooltipPopupOpen] = React.useState(false);\n\n    const [card, setCard] = React.useState({name: '', link: ''});\n    const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n\n    //Карточки\n    const [cards, setCards] = React.useState([]);\n\n\n\n    //Регистрация пользователя\n    function handleRegister({email, password}) {\n        auth.register(email, password)\n        .then((res) => {\n            if(res) {\n                handleIsSuccessTooltipPopupOpen();\n                history.push(\"/signin\");\n            } else {\n                handleIsTooltipPopupOpen();\n            }  \n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n        })\n    }\n\n    //Авторизация пользователя\n    function handleLogin({email, password}) {\n        auth.authorize(email, password)\n        .then((res) => {\n            console.log(res);\n            if(res.token) {\n                tokenCheck();\n            } else {\n                handleIsTooltipPopupOpen();\n            }\n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n        })\n    }\n\n    //Проверка токена\n    function tokenCheck() {\n        const jwt = localStorage.getItem('jwt');\n\n        if(jwt) {\n            auth.checkToken(jwt)\n            .then((res) => {\n                if(res) {\n                    setUserData({ \n                        email: res.email,\n                        id: res._id,\n                    });\n                    \n                    setLoggedIn(true);\n                    history.push(\"/\");\n                } else {\n                    localStorage.removeItem(\"jwt\");\n                    return\n                }\n            })\n            .catch((err) => {\n                console.log(`Attention! ${err}`);\n                history.push(\"/signin\");\n            })\n        }\n    }\n\n    React.useEffect(() => {\n        tokenCheck();\n    }, []);\n\n    //Запрос информации пользователя\n    React.useEffect(() => {\n        if(loggedIn) {\n            api.getUserInfo()\n            .then((userInfo) => {\n                console.log(userInfo);\n                setCurrentUser(userInfo);\n            })\n            .catch((err) => {\n                console.log(`Attention! ${err}`);\n            });\n        }\n        \n    }, [loggedIn]);\n\n    //Выход из аккаунта\n   function handleSignOut() {\n        setLoggedIn(false);\n        history.push(\"/signin\");\n        localStorage.removeItem(\"jwt\");\n    }\n\n    //Открытие попапа проваленой регистрации\n    function handleIsTooltipPopupOpen() {\n        setIsTooltipPopupOpen(!isTooltipPopupOpen);\n    }\n\n    //Открытие попапа успешеной регистрации\n    function handleIsSuccessTooltipPopupOpen() {\n        setIsSuccessTooltipPopupOpen(!isSuccessTooltipPopupOpen);\n    } \n\n    //Открытие попапа аватара\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n    }\n\n    //Открытие попапа профиля\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n    }\n\n    //Открытие попапа карточек\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n    }\n\n    //Открытие превью карточки\n    function handleCardClick(card) {\n        setIsImagePopupOpen(!isImagePopupOpen);\n        setCard({\n            name: card.name,\n            link: card.link\n        });\n    }\n\n    //Обработчик данных профиля\n    function handleUpdateUser(items) {   \n        api.setUserInfo(items)\n            .then((userInfo) => {\n                setCurrentUser(userInfo);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Attention! ${err}`)\n            });\n    }\n\n    //Обработчик данных аватара\n    function handleUpdateAvatar(item) {\n        api.setNewAvatar(item)\n            .then((data) => {\n                setCurrentUser(data);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Attention! ${err}`)\n            })\n        \n    }\n\n    //Закрытие попапов\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsImagePopupOpen(false);\n        setIsTooltipPopupOpen(false);\n        setIsSuccessTooltipPopupOpen(false);\n    }\n\n\n     //Запрос карточек\n     React.useEffect(() => {\n         if(loggedIn) {\n            api.getInitialCards()\n            .then((cards) => {     \n                setCards(cards);\n            })\n            .catch((err) => {\n                console.log(`Attention! ${err}`);\n            });\n         }\n    }, [loggedIn]);\n\n\n    //Постановка и удаление лайка\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n        .then((likedCard) => {\n            const newCards = cards.map((i) => i._id === card._id ? likedCard : i);\n            setCards(newCards);\n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n        });\n    }\n\n    //Удаление карточки\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n        .then(() => {\n            setCards(cards.filter((c) => c._id !== card._id))\n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n        });\n    }\n    \n    //Обработка данных новой карточки\n    function handleAddCardSubmit(items) {\n        api.addCard(items)\n        .then((newCard) => {\n            setCards([newCard, ...cards]);\n            closeAllPopups();\n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n        });\n    }\n\n\n\n  return (\n      <CurrentUserContext.Provider value={currentUser}>\n          <div className=\"page\">\n            <Header \n            loggedIn={loggedIn}\n            userData={userData}\n            signOut={handleSignOut}\n            />\n\n            <Switch>\n                <ProtectedRoute exact path=\"/\"\n                component={Main}\n                loggedIn={loggedIn}\n                onEditAvatar={handleEditAvatarClick}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardClick}\n                cards={cards}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n                />\n\n                <Route path=\"/signin\">\n                    <Login\n                    onLogin={handleLogin}\n                    />\n                </Route>\n\n                <Route path=\"/signup\">\n                    <Register\n                    onRegister={handleRegister}\n                    />\n                </Route>\n            </Switch>\n\n        \n            <Footer />\n\n            <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n            />\n\n            <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddCard={handleAddCardSubmit}\n            />\n\n            <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n            />\n\n            <DeletePopup />\n\n            <ImagePopup\n            card={card}\n            isOpen={isImagePopupOpen}\n            onClose={closeAllPopups}\n            />\n\n            <InfoTooltip \n            name=\"authOk\"\n            isOpen={isSuccessTooltipPopupOpen}\n            onClose={closeAllPopups}\n            title=\"Вы успешно зарегистрировались!\"\n            />\n\n            <InfoTooltip \n            name=\"authCancel\"\n            isOpen={isTooltipPopupOpen}\n            onClose={closeAllPopups}\n            title=\"Что-то пошло не так! Попробуйте ещё раз.\"\n            />\n        </div>\n      </CurrentUserContext.Provider>\n    \n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}